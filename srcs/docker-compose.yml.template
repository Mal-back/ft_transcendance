services:
  nginx:
    image: transcendance_nginx
    container_name: 'transcendance_nginx'
    volumes:
      - data_static:/var/www/static
      - data_avatar_media:/var/www/media
    networks:
      - transcendance
    depends_on: 
      - auth
      - frontend
      - users
      - matchmaking
      - avatars
      - history
    build :
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '8080:8080'
    restart: on-failure

  auth:
    image: transcendance_django_auth
    container_name: 'transcendance_django_auth'
    volumes:
      - data_django_auth:/code
    networks:
      - transcendance
    depends_on:
      - postgresql_auth 
      - maildev
    build:
      context: requirements/django_auth
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '8443'
    restart: on-failure

  users:
    image: transcendance_django_users
    container_name: 'transcendance_django_users'
    volumes:
      - data_django_users:/code
    networks:
      - transcendance
    depends_on:
      - postgresql_users 
    build:
      context: requirements/django_users
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '8443'
    restart: on-failure

  redis:
    image: transcendance_redis
    container_name: 'transcendance_redis'
    networks:
      - transcendance
    build:
      context: requirements/redis
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '6379'
    restart: on-failure

  game:
    image: transcendance_django_game
    container_name: 'transcendance_django_game'
    volumes:
      - data_django_game:/code
    networks:
      - transcendance
    depends_on:
      - postgresql_game
      - redis
    build:
      context: requirements/django_game
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '8443'
    restart: on-failure

  worker:
    image: transcendance_worker
    container_name: 'transcendance_worker'
    volumes:
      - data_django_game:/code
    networks:
      - transcendance
    depends_on:
      - redis
      - game
    build:
      context: requirements/worker
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '8443'
    restart: on-failure

  matchmaking:
    image: transcendance_django_matchmaking
    container_name: 'transcendance_django_matchmaking'
    volumes:
      - data_django_matchmaking:/code
    networks:
      - transcendance
    depends_on:
      - postgresql_matchmaking 
    build:
      context: requirements/django_matchmaking
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '8443'
    restart: on-failure

  avatars:
    image: transcendance_django_avatars
    container_name: 'transcendance_django_avatars'
    volumes:
      - data_django_avatar_management:/code
      - data_avatar_media:/media
    networks:
      - transcendance
    depends_on:
      - postgresql_avatar
    build:
      context: requirements/django_media
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '8443'
    restart: on-failure

  history:
    image: transcendance_django_history
    container_name: 'transcendance_django_history'
    volumes:
      - data_django_history:/code
    networks:
      - transcendance
    depends_on:
      - postgresql_history
    build:
      context: requirements/django_history
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '8443'
    restart: on-failure

  frontend:
    image: transcendance_frontend
    container_name: 'transcendance_frontend'
    volumes:
      - data_frontend:/var/www/myfront
    networks:
      - transcendance
    build:
      context: requirements/frontend
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '8443'
    restart: on-failure

  postgresql_auth:
    image: transcendance_postgresql_auth
    container_name: 'transcendance_postgresql_auth'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_auth
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '5432'
    restart: on-failure

  postgresql_game:
    image: transcendance_postgresql_game
    container_name: 'transcendance_postgresql_game'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_game
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '5432'
    restart: on-failure

  postgresql_users:
    image: transcendance_postgresql_users
    container_name: 'transcendance_postgresql_users'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_users
      dockerfile: Dockerfile
    env_file: .env
    expose:
      - '5432'
    restart: on-failure

  postgresql_matchmaking:
    image: transcendance_postgresql_matchmaking
    container_name: 'transcendance_postgresql_matchmaking'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_matchmaking
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '5432'
    restart: on-failure

  postgresql_avatar:
    image: transcendance_postgresql_avatar
    container_name: 'transcendance_postgresql_avatar'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_avatar
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '5432'
    restart: on-failure

  postgresql_history:
    image: transcendance_postgresql_history
    container_name: 'transcendance_postgresql_history'
    networks:
      - transcendance
    build:
      context: requirements/postgreSQL_history
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '5432'
    restart: on-failure

  maildev:
    image: maildev/maildev
    container_name: 'transcendance_maildev'
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - transcendance

volumes:

  data_django_auth:
    name: data_django_auth
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/auth

  data_django_users:
    name: data_django_users
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/users

  data_django_game:
    name: data_django_game
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/game

  data_django_matchmaking:
    name: data_django_matchmaking
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/matchmaking

  data_django_history:
    name: data_django_history
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/history

  data_django_avatar_management:
    name: data_django_avatar_management
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/avatar_management

  data_avatar_media:
    name: data_avatar_media
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/avatar_media

  data_frontend:
    name: data_frontend
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/frontend

  data_static:
    name: data_static
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: placeholder/srcs/volumes/auth/staticRoot


networks:
  transcendance:
    name: transcendance
    driver: bridge
